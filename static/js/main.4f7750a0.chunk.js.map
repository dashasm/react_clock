{"version":3,"sources":["component/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","interval","this","window","setInterval","setState","console","log","toLocaleTimeString","clearInterval","props","timer","className","name","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","handleClick","handleContextMenu","document","addEventListener","_","prevState","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,SAAW,EALb,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,SAAWE,OAAOC,aAAY,WACjC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAbP,kCAgBE,WACEL,OAAOM,cAAcP,KAAKD,UAC1BE,OAAOM,cAAcP,KAAKQ,MAAMC,SAlBpC,oBAqBE,WACE,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,KAAKQ,MAAMG,OAGb,YAED,sBAAMD,UAAU,cAAhB,SACGV,KAAKJ,MAAMC,KAAKS,8BA/B3B,GAA2BM,aCD3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAGX,IAAMK,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVC,UAAWR,KAHf,EAMEJ,MAAQ,EANV,EAqBEa,YAAc,WACZ,EAAKnB,SAAS,CAAEiB,UAAU,KAtB9B,EAyBEG,kBAAoB,WAClB,EAAKpB,SAAS,CAAEiB,UAAU,KA1B9B,uDAQE,WAAqB,IAAD,OAClBpB,KAAKS,MAAQR,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEkB,UAAWR,QAC1B,MACHW,SAASC,iBAAiB,QAASzB,KAAKsB,aACxCE,SAASC,iBAAiB,cAAezB,KAAKuB,qBAblD,gCAgBE,SAAmBG,EAAiBC,GAElCvB,QAAQC,IAAR,uBAA4BsB,EAAUN,UAAtC,eAAsDrB,KAAKJ,MAAMyB,cAlBrE,oBA6BE,WACE,MAAgCrB,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKX,UAAU,MAAf,UACE,6CACCU,GAAa,cAAC,EAAD,CAAOT,KAAMU,EAAWZ,MAAOT,KAAKS,eAnC1D,GAAyBG,aCbzBgB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.4f7750a0.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n  timer: number;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  interval = 0;\n\n  componentDidMount() {\n    this.interval = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n    window.clearInterval(this.props.timer);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Clock } from './component/Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timer = 0;\n\n  componentDidMount() {\n    this.timer = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('click', this.handleClick);\n    document.addEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  componentDidUpdate(_: Readonly<{}>, prevState: Readonly<State>) {\n    // eslint-disable-next-line\n    console.log(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextMenu = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (<Clock name={clockName} timer={this.timer} />)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}